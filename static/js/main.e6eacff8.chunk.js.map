{"version":3,"sources":["images.js","App.js","reportWebVitals.js","index.js"],"names":["Images","state","images","page","getMoreImage","a","process","setState","axios","get","response","concat","data","this","console","log","dataLength","length","next","hasMore","loader","CardColumns","className","map","img","Card","Img","variant","src","urls","small","Body","Title","alt_description","React","Component","App","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gSASqBA,E,4MAEjBC,MAAQ,CACJC,OAAQ,GACRC,KAAM,G,EAcVC,a,sBAAe,4BAAAC,EAAA,4DACOC,mEAClB,EAAKC,SAAS,CACVJ,KAAM,EAAKF,MAAME,KAAO,IAHjB,SAKUK,IAAMC,IAAN,qDAJHH,mEAIG,iBAA0E,EAAKL,MAAME,OAL/F,OAKPO,EALO,OAMX,EAAKH,SAAS,CACVL,OAAQ,EAAKD,MAAMC,OAAOS,OAAOD,EAASE,QAPnC,2C,wLATON,mE,SACGE,IAAMC,IAAN,qDADHH,mEACG,iBAA0EO,KAAKZ,MAAME,O,OAAtGO,E,OACJI,QAAQC,IAAIL,GACZG,KAAKN,SAAS,CACVL,OAAQQ,EAASE,OAErBE,QAAQC,IAAIF,KAAKZ,MAAMC,Q,qIAevB,OAEI,cAAC,IAAD,CACIc,WAAYH,KAAKZ,MAAMC,OAAOe,OAC9BC,KAAML,KAAKT,aACXe,SAAS,EACTC,OAAQ,kEAJZ,SAKI,cAACC,EAAA,EAAD,CAAaC,UAAU,YAAvB,SACKT,KAAKZ,MAAMC,OAAOqB,KAAI,SAAAC,GAAG,OACtB,eAACC,EAAA,EAAD,WACI,cAACA,EAAA,EAAKC,IAAN,CAAUC,QAAQ,MAAMC,IAAKJ,EAAIK,KAAKC,QACtC,cAACL,EAAA,EAAKM,KAAN,UACI,cAACN,EAAA,EAAKO,MAAN,UAAaR,EAAIS,kC,GA1CbC,IAAMC,W,+BCQ3BC,MAXf,WACE,OACE,sBAAKd,UAAU,MAAf,UACI,cAAC,IAAD,IACA,6DACA,0FAA4D,mBAAGe,KAAK,wBAAR,yBAC5D,cAAC,EAAD,QCAOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e6eacff8.chunk.js","sourcesContent":["import React from \"react\"\nimport axios from \"axios\"\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport Card from 'react-bootstrap/Card';\nimport CardColumns from 'react-bootstrap/CardColumns'\n\n\n\n\nexport default class Images extends React.Component {\n\n    state = {\n        images: [],\n        page: 1\n\n    }\n\n    async componentDidMount() {\n        const accessKey = process.env.REACT_APP_ACCESSKEY\n        let response = await axios.get(`https://api.unsplash.com/photos/?client_id=${accessKey}&page=${this.state.page}`)\n        console.log(response)\n        this.setState({\n            images: response.data\n        })\n        console.log(this.state.images)\n    }\n\n    getMoreImage = async () => {\n        const accessKey = process.env.REACT_APP_ACCESSKEY\n        this.setState({\n            page: this.state.page + 1,\n        })\n        let response = await axios.get(`https://api.unsplash.com/photos/?client_id=${accessKey}&page=${this.state.page}`)\n        this.setState({\n            images: this.state.images.concat(response.data)\n        })\n    }\n\n    render() {\n        return (\n\n            <InfiniteScroll\n                dataLength={this.state.images.length}\n                next={this.getMoreImage}\n                hasMore={true}\n                loader={<h3>loading more awesome pictures...</h3>}>\n                <CardColumns className=\"container\">\n                    {this.state.images.map(img => (\n                        <Card>\n                            <Card.Img variant=\"top\" src={img.urls.small} />\n                            <Card.Body>\n                                <Card.Title>{img.alt_description}</Card.Title>\n                            </Card.Body>\n                        </Card>\n                    ))}\n                </CardColumns>\n\n            </InfiniteScroll>\n\n        )//return\n    }//render\n\n\n\n\n\n\n}","import React from 'react'\nimport Images from './images'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"./App.css\"\nimport ScrollUpButton from \"react-scroll-up-button\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <ScrollUpButton />\n        <h1>Unsplash Infinite scrolling</h1>\n        <p>Scroll through to enjoy an array of wonderful image from <a href=\"https://unsplash.com/\">Unsplash</a></p>\n        <Images/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}